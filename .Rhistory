title = "NYC Base Salaries",
subtitle = "Width of plots reflects prevalence of given salary levels",
caption = "Source: NYC Open Data - Citywide Payroll Data") +
#scale_x_reverse() +
scale_y_continuous(breaks = c(50000, 100000, 150000), labels = c("$50k", "$100k", "$150k")) +
coord_flip() +
theme_ipsum()
grp_by_agency %>%
filter(fiscal_year == 2017) %>%
arrange(desc(base_total)) %>%
top_n(top_set) %>%
left_join(src_data, by = c(fiscal_year = "Fiscal Year", agency_name = "Agency Name")) %>%
select(fiscal_year, agency_name, 'Base Salary') %>%
rename(base_salary = 'Base Salary') %>%
mutate(base_salary = as.numeric(gsub('[$,]','',.$base_salary))) %>%
filter(base_salary > 1000 & base_salary < 150000) %>%
ggplot(aes(x = factor(agency_name, levels = as.factor(order_desc_by_size$agency_name)), y = base_salary)) +
geom_violin(aes(fill = agency_name), show.legend = FALSE) +
labs(x = "Agency",
y = "Base Salary",
title = "2017 NYC Base Salaries",
subtitle = "Width of plots reflects prevalence of given salary levels",
caption = "Source: NYC Open Data - Citywide Payroll Data") +
#scale_x_reverse() +
scale_y_continuous(breaks = c(50000, 100000, 150000), labels = c("$50k", "$100k", "$150k")) +
coord_flip() +
theme_ipsum()
grp_by_agency %>%
filter(fiscal_year == 2017) %>%
arrange(desc(base_total)) %>%
top_n(top_set) %>%
left_join(src_data, by = c(fiscal_year = "Fiscal Year", agency_name = "Agency Name")) %>%
select(fiscal_year, agency_name, 'Base Salary') %>%
rename(base_salary = 'Base Salary') %>%
mutate(base_salary = as.numeric(gsub('[$,]','',.$base_salary))) %>%
filter(base_salary > 1000 & base_salary < 150000) %>%
ggplot(aes(x = factor(agency_name, levels = as.factor(order_desc_by_size$agency_name)), y = base_salary)) +
geom_violin(aes(fill = agency_name), show.legend = FALSE) +
labs(x = "Agency",
y = "Base Salary",
title = "2017 NYC Base Salaries",
subtitle = "Width of plots reflects prevalence of given salary levels",
caption = "Source: NYC Open Data - Citywide Payroll Data") +
#scale_x_reverse() +
scale_y_continuous(breaks = c(50000, 100000, 150000), labels = c("$50k", "$100k", "$150k")) +
coord_flip() +
theme_ipsum()
grp_by_agency %>%
filter(fiscal_year == 2017) %>%
arrange(desc(base_total)) %>%
top_n(top_set) %>%
left_join(src_data, by = c(fiscal_year = "Fiscal Year", agency_name = "Agency Name")) %>%
select(fiscal_year, agency_name, 'Base Salary') %>%
rename(base_salary = 'Base Salary') %>%
mutate(base_salary = as.numeric(gsub('[$,]','',.$base_salary))) %>%
filter(base_salary > 1000 & base_salary < 150000) %>%
ggplot(aes(x = factor(agency_name, levels = rev(as.factor(order_desc_by_size$agency_name))), y = base_salary)) +
geom_violin(aes(fill = agency_name), show.legend = FALSE) +
labs(x = "Agency",
y = "Base Salary",
title = "2017 NYC Base Salaries",
subtitle = "Width of plots reflects prevalence of given salary levels",
caption = "Source: NYC Open Data - Citywide Payroll Data") +
#ßscale_x_discrete() +
scale_y_continuous(breaks = c(50000, 100000, 150000), labels = c("$50k", "$100k", "$150k")) +
coord_flip() +
theme_ipsum()
grp_by_agency %>%
filter(fiscal_year == 2017) %>%
arrange(desc(base_total)) %>%
top_n(top_set) %>%
left_join(src_data, by = c(fiscal_year = "Fiscal Year", agency_name = "Agency Name")) %>%
select(fiscal_year, agency_name, 'Base Salary') %>%
rename(base_salary = 'Base Salary') %>%
mutate(base_salary = as.numeric(gsub('[$,]','',.$base_salary))) %>%
filter(base_salary > 1000 & base_salary < 150000) %>%
ggplot(aes(x = factor(agency_name, levels = rev(as.factor(order_desc_by_size$agency_name))), y = base_salary)) +
geom_violin(aes(fill = agency_name), show.legend = FALSE) +
labs(x = "Agency",
y = "Base Salary",
title = "2017 NYC Base Salaries",
subtitle = "Width of plots reflects prevalence of given salary levels.\nAgencies sorted by descending order by total base payroll size.",
caption = "Source: NYC Open Data - Citywide Payroll Data") +
#ßscale_x_discrete() +
scale_y_continuous(breaks = c(50000, 100000, 150000), labels = c("$50k", "$100k", "$150k")) +
coord_flip() +
theme_ipsum()
grp_by_agency %>%
filter(fiscal_year == 2017) %>%
arrange(desc(base_total)) %>%
top_n(top_set) %>%
left_join(src_data, by = c(fiscal_year = "Fiscal Year", agency_name = "Agency Name")) %>%
select(fiscal_year, agency_name, 'Base Salary') %>%
rename(base_salary = 'Base Salary') %>%
mutate(base_salary = as.numeric(gsub('[$,]','',.$base_salary))) %>%
filter(base_salary > 1000 & base_salary < 150000) %>%
ggplot(aes(x = factor(agency_name, levels = rev(as.factor(order_desc_by_size$agency_name))), y = base_salary)) +
geom_violin(aes(fill = agency_name), show.legend = FALSE) +
labs(x = "Agency",
y = "Base Salary",
title = "2017 NYC Base Salaries",
subtitle = "Agencies sorted by descending order by total base payroll size.\nWidth of plots reflects prevalence of salary levels.",
caption = "Source: NYC Open Data - Citywide Payroll Data") +
#ßscale_x_discrete() +
scale_y_continuous(breaks = c(50000, 100000, 150000), labels = c("$50k", "$100k", "$150k")) +
coord_flip() +
theme_ipsum()
order_desc_by_size
grp_by_agency %>%
filter(fiscal_year == 2017) %>%
arrange(desc(base_total)) %>%
top_n(top_set) %>%
left_join(src_data, by = c(fiscal_year = "Fiscal Year", agency_name = "Agency Name")) %>%
select(fiscal_year, agency_name, 'Base Salary') %>%
rename(base_salary = 'Base Salary') %>%
mutate(base_salary = as.numeric(gsub('[$,]','',.$base_salary))) %>%
filter(base_salary > 1000 & base_salary < 150000) %>%
ggplot(aes(x = factor(agency_name, levels = rev(as.factor(order_desc_by_size$agency_name))), y = base_salary)) +
geom_violin(aes(fill = agency_name), show.legend = FALSE) +
labs(x = "Agency",
y = "Base Salary",
title = "2017 NYC Base Salaries",
subtitle = "Plot reflects the top ten largest agencies based on aggregate base payroll. Agencies sorted by descending order by total base payroll size.\nWidth of plots reflects prevalence of salary levels.",
caption = "Source: NYC Open Data - Citywide Payroll Data") +
#ßscale_x_discrete() +
scale_y_continuous(breaks = c(50000, 100000, 150000), labels = c("$50k", "$100k", "$150k")) +
coord_flip() +
theme_ipsum()
grp_by_agency %>%
filter(fiscal_year == 2017) %>%
arrange(desc(base_total)) %>%
top_n(top_set) %>%
left_join(src_data, by = c(fiscal_year = "Fiscal Year", agency_name = "Agency Name")) %>%
select(fiscal_year, agency_name, 'Base Salary') %>%
rename(base_salary = 'Base Salary') %>%
mutate(base_salary = as.numeric(gsub('[$,]','',.$base_salary))) %>%
filter(base_salary > 1000 & base_salary < 150000) %>%
ggplot(aes(x = factor(agency_name, levels = rev(as.factor(order_desc_by_size$agency_name))), y = base_salary)) +
geom_violin(aes(fill = agency_name), show.legend = FALSE) +
labs(x = "Agency",
y = "Base Salary",
title = "2017 NYC Base Salaries",
subtitle = "Plot reflects the top ten largest agencies based on aggregate base payroll.\nAgencies sorted by descending order by total base payroll size.\nWidth of plots reflects prevalence of salary levels.",
caption = "Source: NYC Open Data - Citywide Payroll Data") +
#ßscale_x_discrete() +
scale_y_continuous(breaks = c(50000, 100000, 150000), labels = c("$50k", "$100k", "$150k")) +
coord_flip() +
theme_ipsum()
grp_by_agency %>%
filter(fiscal_year == 2017) %>%
arrange(desc(base_total)) %>%
top_n(top_set) %>%
left_join(src_data, by = c(fiscal_year = "Fiscal Year", agency_name = "Agency Name")) %>%
select(fiscal_year, agency_name, 'Base Salary') %>%
rename(base_salary = 'Base Salary') %>%
mutate(base_salary = as.numeric(gsub('[$,]','',.$base_salary))) %>%
filter(base_salary > 1000 & base_salary < 150000) %>%
ggplot(aes(x = factor(agency_name, levels = rev(as.factor(order_desc_by_size$agency_name))), y = base_salary)) +
geom_violin(aes(fill = agency_name), show.legend = FALSE, scale = "count") +
labs(x = "Agency",
y = "Base Salary",
title = "2017 NYC Base Salaries",
subtitle = "Plot reflects the top ten largest agencies based on aggregate base payroll.\nAgencies sorted by descending order by total base payroll size.\nWidth of plots reflects prevalence of salary levels.",
caption = "Source: NYC Open Data - Citywide Payroll Data") +
#ßscale_x_discrete() +
scale_y_continuous(breaks = c(50000, 100000, 150000), labels = c("$50k", "$100k", "$150k")) +
coord_flip() +
theme_ipsum()
grp_by_agency %>%
filter(fiscal_year == 2017) %>%
arrange(desc(base_total)) %>%
top_n(top_set) %>%
left_join(src_data, by = c(fiscal_year = "Fiscal Year", agency_name = "Agency Name")) %>%
select(fiscal_year, agency_name, 'Base Salary') %>%
rename(base_salary = 'Base Salary') %>%
mutate(base_salary = as.numeric(gsub('[$,]','',.$base_salary))) %>%
filter(base_salary > 1000 & base_salary < 150000) %>%
ggplot(aes(x = factor(agency_name, levels = rev(as.factor(order_desc_by_size$agency_name))), y = base_salary)) +
geom_violin(aes(fill = agency_name), show.legend = FALSE, scale = "width") +
labs(x = "Agency",
y = "Base Salary",
title = "2017 NYC Base Salaries",
subtitle = "Plot reflects the top ten largest agencies based on aggregate base payroll.\nAgencies sorted by descending order by total base payroll size.\nWidth of plots reflects prevalence of salary levels.",
caption = "Source: NYC Open Data - Citywide Payroll Data") +
#ßscale_x_discrete() +
scale_y_continuous(breaks = c(50000, 100000, 150000), labels = c("$50k", "$100k", "$150k")) +
coord_flip() +
theme_ipsum()
grp_by_agency %>%
filter(fiscal_year == 2017) %>%
arrange(desc(base_total)) %>%
top_n(top_set) %>%
left_join(src_data, by = c(fiscal_year = "Fiscal Year", agency_name = "Agency Name")) %>%
select(fiscal_year, agency_name, 'Base Salary') %>%
rename(base_salary = 'Base Salary') %>%
mutate(base_salary = as.numeric(gsub('[$,]','',.$base_salary))) %>%
filter(base_salary > 1000 & base_salary < 150000) %>%
ggplot(aes(x = factor(agency_name, levels = rev(as.factor(order_desc_by_size$agency_name))), y = base_salary)) +
geom_jitter() +
geom_violin(aes(fill = agency_name), show.legend = FALSE, scale = "width") +
labs(x = "Agency",
y = "Base Salary",
title = "2017 NYC Base Salaries",
subtitle = "Plot reflects the top ten largest agencies based on aggregate base payroll.\nAgencies sorted by descending order by total base payroll size.\nWidth of plots reflects prevalence of salary levels.",
caption = "Source: NYC Open Data - Citywide Payroll Data") +
#ßscale_x_discrete() +
scale_y_continuous(breaks = c(50000, 100000, 150000), labels = c("$50k", "$100k", "$150k")) +
coord_flip() +
theme_ipsum()
grp_by_agency %>%
filter(fiscal_year == 2017) %>%
arrange(desc(base_total)) %>%
top_n(top_set) %>%
left_join(src_data, by = c(fiscal_year = "Fiscal Year", agency_name = "Agency Name")) %>%
select(fiscal_year, agency_name, 'Base Salary') %>%
rename(base_salary = 'Base Salary') %>%
mutate(base_salary = as.numeric(gsub('[$,]','',.$base_salary))) %>%
filter(base_salary > 1000 & base_salary < 150000) %>%
ggplot(aes(x = factor(agency_name, levels = rev(as.factor(order_desc_by_size$agency_name))), y = base_salary)) +
# geom_jitter() +
geom_violin(aes(fill = agency_name), show.legend = FALSE, scale = "width") +
labs(x = "Agency",
y = "Base Salary",
title = "2017 NYC Base Salaries",
subtitle = "Plot reflects the top ten largest agencies based on aggregate base payroll.\nAgencies sorted by descending order by total base payroll size.\nWidth of plots reflects prevalence of salary levels.",
caption = "Source: NYC Open Data - Citywide Payroll Data") +
#ßscale_x_discrete() +
scale_y_continuous(breaks = c(50000, 100000, 150000), labels = c("$50k", "$100k", "$150k")) +
coord_flip() +
theme_ipsum()
grp_by_agency %>%
filter(fiscal_year == 2017) %>%
arrange(desc(base_total)) %>%
top_n(top_set) %>%
left_join(src_data, by = c(fiscal_year = "Fiscal Year", agency_name = "Agency Name")) %>%
select(fiscal_year, agency_name, 'Base Salary') %>%
rename(base_salary = 'Base Salary') %>%
mutate(base_salary = as.numeric(gsub('[$,]','',.$base_salary))) %>%
filter(base_salary > 1000 & base_salary < 150000) %>%
ggplot(aes(x = factor(agency_name, levels = rev(as.factor(order_desc_by_size$agency_name))), y = base_salary)) +
# geom_jitter() +
geom_violin(aes(fill = agency_name), show.legend = FALSE, scale = "width", draw_quantiles = c(.25, .5, .75)) +
labs(x = "Agency",
y = "Base Salary",
title = "2017 NYC Base Salaries",
subtitle = "Plot reflects the top ten largest agencies based on aggregate base payroll.\nAgencies sorted by descending order by total base payroll size.\nWidth of plots reflects prevalence of salary levels.",
caption = "Source: NYC Open Data - Citywide Payroll Data") +
#ßscale_x_discrete() +
scale_y_continuous(breaks = c(50000, 100000, 150000), labels = c("$50k", "$100k", "$150k")) +
coord_flip() +
theme_ipsum()
grp_by_agency %>%
filter(fiscal_year == 2017) %>%
arrange(desc(base_total)) %>%
top_n(top_set) %>%
left_join(src_data, by = c(fiscal_year = "Fiscal Year", agency_name = "Agency Name")) %>%
select(fiscal_year, agency_name, 'Base Salary') %>%
rename(base_salary = 'Base Salary') %>%
mutate(base_salary = as.numeric(gsub('[$,]','',.$base_salary))) %>%
filter(base_salary > 1000 & base_salary < 150000) %>%
ggplot(aes(x = factor(agency_name, levels = rev(as.factor(order_desc_by_size$agency_name))), y = base_salary)) +
# geom_jitter() +
geom_violin(aes(fill = agency_name), show.legend = FALSE, scale = "width", draw_quantiles = c(.25, .5, .75)) +
labs(x = "Agency",
y = "Base Salary",
title = "2017 NYC Base Salaries",
subtitle = "Plot reflects the top ten largest agencies based on aggregate base payroll.\nAgencies sorted by descending order by aggregate base payroll.\nVertical bands reflect 25%, 50%, and 75% quantiles.\nWidth of plots reflects prevalence of salary levels.",
caption = "Source: NYC Open Data - Citywide Payroll Data") +
#ßscale_x_discrete() +
scale_y_continuous(breaks = c(50000, 100000, 150000), labels = c("$50k", "$100k", "$150k")) +
coord_flip() +
theme_ipsum()
grp_by_agency %>%
filter(fiscal_year == 2017) %>%
arrange(desc(base_total)) %>%
top_n(top_set) %>%
left_join(src_data, by = c(fiscal_year = "Fiscal Year", agency_name = "Agency Name")) %>%
select(fiscal_year, agency_name, 'Base Salary') %>%
rename(base_salary = 'Base Salary') %>%
mutate(base_salary = as.numeric(gsub('[$,]','',.$base_salary))) %>%
filter(base_salary > 1000 & base_salary < 150000) %>%
ggplot(aes(x = factor(agency_name, levels = rev(as.factor(order_desc_by_size$agency_name))), y = base_salary)) +
# geom_jitter() +
geom_violin(aes(fill = agency_name), show.legend = FALSE, scale = "width") +
labs(x = "Agency",
y = "Base Salary",
title = "2017 NYC Base Salaries",
subtitle = "Plot reflects the top ten largest agencies based on aggregate base payroll.\nAgencies sorted by descending order by aggregate base payroll.\nWidth of plots reflects prevalence of salary levels.",
caption = "Source: NYC Open Data - Citywide Payroll Data") +
#ßscale_x_discrete() +
scale_y_continuous(breaks = c(50000, 100000, 150000), labels = c("$50k", "$100k", "$150k")) +
coord_flip() +
theme_ipsum()
grp_by_agency %>%
filter(fiscal_year == 2017) %>%
arrange(desc(base_total)) %>%
top_n(top_set) %>%
left_join(src_data, by = c(fiscal_year = "Fiscal Year", agency_name = "Agency Name")) %>%
select(fiscal_year, agency_name, 'Base Salary') %>%
rename(base_salary = 'Base Salary') %>%
mutate(base_salary = as.numeric(gsub('[$,]','',.$base_salary))) %>%
filter(base_salary > 1000 & base_salary < 150000) %>%
ggplot(aes(x = factor(agency_name, levels = rev(as.factor(order_desc_by_size$agency_name))), y = base_salary)) +
# geom_jitter() +
geom_violin(aes(fill = agency_name), show.legend = FALSE, scale = "width") +
labs(x = "Agency",
y = "Base Salary",
title = "2017 NYC Base Salaries",
subtitle = "Plot reflects the top ten largest agencies based on aggregate base payroll.\nAgencies sorted by descending order by aggregate base payroll.\nWidth of plots are equally scaled and reflect prevalence of salary levels within each agency.",
caption = "Source: NYC Open Data - Citywide Payroll Data") +
#ßscale_x_discrete() +
scale_y_continuous(breaks = c(50000, 100000, 150000), labels = c("$50k", "$100k", "$150k")) +
coord_flip() +
theme_ipsum()
grp_by_agency %>%
filter(fiscal_year == 2017) %>%
arrange(desc(base_total)) %>%
top_n(top_set) %>%
left_join(src_data, by = c(fiscal_year = "Fiscal Year", agency_name = "Agency Name")) %>%
select(fiscal_year, agency_name, 'Base Salary') %>%
rename(base_salary = 'Base Salary') %>%
mutate(base_salary = as.numeric(gsub('[$,]','',.$base_salary))) %>%
filter(base_salary > 1000 & base_salary < 150000) %>%
ggplot(aes(x = factor(agency_name, levels = rev(as.factor(order_desc_by_size$agency_name))), y = base_salary)) +
# geom_jitter() +
geom_violin(aes(fill = agency_name), show.legend = FALSE, scale = "width") +
labs(x = "Agency",
y = "Base Salary",
title = "2017 NYC Base Salaries",
subtitle = "Agencies are sorted by descending order by aggregate base payroll.\nWidth of plots are equally scaled and reflect prevalence of salary levels within each agency.",
caption = "Source: NYC Open Data - Citywide Payroll Data") +
#ßscale_x_discrete() +
scale_y_continuous(breaks = c(50000, 100000, 150000), labels = c("$50k", "$100k", "$150k")) +
coord_flip() +
theme_ipsum()
grp_by_agency %>%
filter(fiscal_year == 2017) %>%
arrange(desc(base_total)) %>%
top_n(top_set) %>%
left_join(src_data, by = c(fiscal_year = "Fiscal Year", agency_name = "Agency Name")) %>%
select(fiscal_year, agency_name, 'Base Salary') %>%
rename(base_salary = 'Base Salary') %>%
mutate(base_salary = as.numeric(gsub('[$,]','',.$base_salary))) %>%
filter(base_salary > 1000 & base_salary < 150000) %>%
ggplot(aes(x = factor(agency_name, levels = rev(as.factor(order_desc_by_size$agency_name))), y = base_salary)) +
# geom_jitter() +
geom_violin(aes(fill = agency_name), show.legend = FALSE, scale = "width") +
labs(x = "Agency",
y = "Base Salary",
title = "2017 NYC Base Salaries",
subtitle = "Agencies are sorted by descending order by aggregate base payroll for the ten largest agencies by aggregate base payroll.\nWidth of plots are equally scaled and reflect prevalence of salary levels within each agency.",
caption = "Source: NYC Open Data - Citywide Payroll Data") +
#ßscale_x_discrete() +
scale_y_continuous(breaks = c(50000, 100000, 150000), labels = c("$50k", "$100k", "$150k")) +
coord_flip() +
theme_ipsum()
grp_by_agency %>%
filter(fiscal_year == 2017) %>%
arrange(desc(base_total)) %>%
top_n(top_set) %>%
left_join(src_data, by = c(fiscal_year = "Fiscal Year", agency_name = "Agency Name")) %>%
select(fiscal_year, agency_name, 'Base Salary') %>%
rename(base_salary = 'Base Salary') %>%
mutate(base_salary = as.numeric(gsub('[$,]','',.$base_salary))) %>%
filter(base_salary > 1000 & base_salary < 150000) %>%
ggplot(aes(x = factor(agency_name, levels = rev(as.factor(order_desc_by_size$agency_name))), y = base_salary)) +
# geom_jitter() +
geom_violin(aes(fill = agency_name), show.legend = FALSE, scale = "width") +
labs(x = "Agency",
y = "Base Salary",
title = "2017 NYC Base Salaries",
subtitle = "Agencies are sorted in descending order for the ten largest agencies by aggregate base payroll.\nWidth of plots are equally scaled and reflect prevalence of salary levels within each agency.",
caption = "Source: NYC Open Data - Citywide Payroll Data") +
#ßscale_x_discrete() +
scale_y_continuous(breaks = c(50000, 100000, 150000), labels = c("$50k", "$100k", "$150k")) +
coord_flip() +
theme_ipsum()
grp_by_agency %>%
filter(fiscal_year == 2017) %>%
arrange(desc(base_total)) %>%
top_n(top_set) %>%
left_join(src_data, by = c(fiscal_year = "Fiscal Year", agency_name = "Agency Name")) %>%
select(fiscal_year, agency_name, 'Base Salary') %>%
rename(base_salary = 'Base Salary') %>%
mutate(base_salary = as.numeric(gsub('[$,]','',.$base_salary))) %>%
filter(base_salary > 1000 & base_salary < 150000) %>%
ggplot(aes(x = factor(agency_name, levels = rev(as.factor(order_desc_by_size$agency_name))), y = base_salary)) +
# geom_jitter() +
geom_violin(aes(fill = agency_name), show.legend = FALSE, scale = "width") +
labs(x = "Agency",
y = "Base Salary",
title = "2017 NYC Base Salaries",
subtitle = "Agencies are sorted in descending order for the ten largest agencies by aggregate base payroll.\nWidth of plots are equally scaled and reflect prevalence of salary levels within each agency.",
caption = "Source: NYC Open Data - Citywide Payroll Data") +
#ßscale_x_discrete() +
scale_y_continuous(breaks = c(50000, 100000, 150000), labels = c("$50k", "$100k", "$150k")) +
coord_flip() +
theme_ipsum()
grp_by_agency %>%
filter(fiscal_year == 2017) %>%
arrange(desc(base_total)) %>%
top_n(top_set) %>%
left_join(src_data, by = c(fiscal_year = "Fiscal Year", agency_name = "Agency Name")) %>%
select(fiscal_year, agency_name, 'Base Salary') %>%
rename(base_salary = 'Base Salary') %>%
mutate(base_salary = as.numeric(gsub('[$,]','',.$base_salary))) %>%
filter(base_salary > 1000 & base_salary < 150000) %>%
ggplot(aes(x = factor(agency_name, levels = rev(as.factor(order_desc_by_size$agency_name))), y = base_salary)) +
# geom_jitter() +
geom_violin(aes(fill = agency_name), show.legend = FALSE, scale = "width") +
labs(x = "Agency",
y = "Base Salary",
title = "2017 NYC Base Salaries",
subtitle = "Agencies are sorted in descending order for the ten largest agencies by aggregate base payroll.\nWidth of plots are equally scaled and reflect prevalence of salary levels within each agency.",
caption = "Source: NYC Open Data - Citywide Payroll Data\nhttps://github.com/kwanlin/nyc_open_data") +
#ßscale_x_discrete() +
scale_y_continuous(breaks = c(50000, 100000, 150000), labels = c("$50k", "$100k", "$150k")) +
coord_flip() +
theme_ipsum()
grp_by_agency %>%
filter(fiscal_year == 2017) %>%
arrange(desc(base_total)) %>%
top_n(top_set) %>%
left_join(src_data, by = c(fiscal_year = "Fiscal Year", agency_name = "Agency Name")) %>%
select(fiscal_year, agency_name, 'Base Salary') %>%
rename(base_salary = 'Base Salary') %>%
mutate(base_salary = as.numeric(gsub('[$,]','',.$base_salary))) %>%
filter(base_salary > 1000 & base_salary < 150000) %>%
ggplot(aes(x = factor(agency_name, levels = rev(as.factor(order_desc_by_size$agency_name))), y = base_salary)) +
# geom_jitter() +
geom_violin(aes(fill = agency_name), show.legend = FALSE, scale = "width") +
labs(x = "Agency",
y = "Base Salary",
title = "2017 NYC Base Salaries",
subtitle = "Agencies are sorted in descending order for the ten largest agencies by aggregate base payroll.\nWidth of plots are equally scaled and reflect prevalence of salary levels within each agency.",
caption = "Source: NYC Open Data - Citywide Payroll Data\nCode: https://github.com/kwanlin/nyc_open_data") +
#ßscale_x_discrete() +
scale_y_continuous(breaks = c(50000, 100000, 150000), labels = c("$50k", "$100k", "$150k")) +
coord_flip() +
theme_ipsum()
?ggsave
grp_by_agency %>%
filter(fiscal_year == 2017) %>%
arrange(desc(base_total)) %>%
top_n(top_set) %>%
left_join(src_data, by = c(fiscal_year = "Fiscal Year", agency_name = "Agency Name")) %>%
select(fiscal_year, agency_name, 'Base Salary') %>%
rename(base_salary = 'Base Salary') %>%
mutate(base_salary = as.numeric(gsub('[$,]','',.$base_salary))) %>%
filter(base_salary > 1000 & base_salary < 150000) %>%
ggplot(aes(x = factor(agency_name, levels = rev(as.factor(order_desc_by_size$agency_name))), y = base_salary)) +
# geom_jitter() +
geom_violin(aes(fill = agency_name), show.legend = FALSE, scale = "width") +
labs(x = "Agency",
y = "Base Salary",
title = "2017 NYC Base Salaries",
subtitle = "Agencies are sorted in descending order for the ten largest agencies by aggregate base payroll.\nWidth of plots are equally scaled and reflect prevalence of salary levels within each agency.",
caption = "Source: NYC Open Data - Citywide Payroll Data\nCode: https://github.com/kwanlin/nyc_open_data") +
#scale_x_discrete() +
scale_y_continuous(breaks = c(50000, 100000, 150000), labels = c("$50k", "$100k", "$150k")) +
coord_flip() +
theme_ipsum() -> ggsave("~/Desktop/2017_nyc_base_salaries.png")
grp_by_agency %>%
filter(fiscal_year == 2017) %>%
arrange(desc(base_total)) %>%
top_n(top_set) %>%
left_join(src_data, by = c(fiscal_year = "Fiscal Year", agency_name = "Agency Name")) %>%
select(fiscal_year, agency_name, 'Base Salary') %>%
rename(base_salary = 'Base Salary') %>%
mutate(base_salary = as.numeric(gsub('[$,]','',.$base_salary))) %>%
filter(base_salary > 1000 & base_salary < 150000) %>%
ggplot(aes(x = factor(agency_name, levels = rev(as.factor(order_desc_by_size$agency_name))), y = base_salary)) +
# geom_jitter() +
geom_violin(aes(fill = agency_name), show.legend = FALSE, scale = "width") +
labs(x = "Agency",
y = "Base Salary",
title = "2017 NYC Base Salaries",
subtitle = "Agencies are sorted in descending order for the ten largest agencies by aggregate base payroll.\nWidth of plots are equally scaled and reflect prevalence of salary levels within each agency.",
caption = "Source: NYC Open Data - Citywide Payroll Data\nCode: https://github.com/kwanlin/nyc_open_data") +
#scale_x_discrete() +
scale_y_continuous(breaks = c(50000, 100000, 150000), labels = c("$50k", "$100k", "$150k")) +
coord_flip() +
theme_ipsum()
ggsave("~/Desktop/2017_nyc_base_salaries.png")
ggsave("~/Desktop/2017_nyc_base_salaries.png", width = 10, height = 8)
ggsave("~/Desktop/2017_nyc_base_salaries.png", width = 12, height = 8)
ggsave("~/Desktop/2017_nyc_base_salaries.png", width = 6, height = 4)
ggsave("~/Desktop/2017_nyc_base_salaries.png", width = 12, height = 6)
help(package = "rmarkdown")
library(rmarkdown)
sessionInfo()
library(devtools)
devtools::install_github("klutometis/roxygen")
setwd("~/projects/packages/pendoR/")
getwd()
create("pendor")
ls
getwd()
ls
library(devtools)
?create
?@param
vignette(roxygen)
getwd()
document()
ls
getwd()
setwd("..")
getwd()
install("pendor")
?report_json
packageVersion("httr")
